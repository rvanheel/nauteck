@using MediatR;
@inject IMediator Mediator
@model nauteck.data.Entities.Order.FloorOrder

@{
    var attachments = await Mediator.Send(new nauteck.core.Features.Order.Queries.FloorOrderAttachmentQuery(string.IsNullOrEmpty(Model.Id) ? Guid.Empty : Guid.Parse(Model.Id)));

}

<div class="card w-100">
    <div class="card-header"><i class="bi bi-download"></i>&nbsp;Attachments</div>
    <div class="card-body">
        <div class="col">
            <label class="text-muted small" for="file1">Add File</label>
            <input class="form-control form-control-sm" type="file" id="file1">
            <label class="text-muted small" for="file2">Add File</label>
            <input class="form-control form-control-sm" type="file" id="file2">
            <label class="text-muted small" for="file3">Add File</label>
            <input class="form-control form-control-sm" type="file" id="file3">
        </div>
        <table class="table-responsive table">
            <thead>
                <tr>
                    <th scope="col">&nbsp;</th>
                    <th scope="col">FileName</th>
                    <th scope="col" class="text-end">Size</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in attachments)
                {
                    <tr>
                        <td><a class="btn btn-warning btn-sm" download="@item.FileUrl" href="@item.FileUrl" title="@item.FileName"><i class="bi bi-download"></i></a></td>
                        <td class="small">@item.FileName</td>
                        <td class="text-end small">@(item.FileSize / 1024) Kb</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>