@using MediatR
@inject IMediator Mediator;

@{
    var standardColors = Mediator.Send(new nauteck.core.Features.Floor.Color.FloorColorQuery());
    var exclusiveColors = Mediator.Send(new nauteck.core.Features.Floor.Color.FloorColorExclusiveQuery());
    await Task.WhenAll(standardColors, exclusiveColors);
}
<option value=""></option>
<optgroup label="Standard Colors">
    @foreach (var color in standardColors.Result)
    {
        <option data-exclusive="false" data-price=@ViewData["standard"] selected="@(color.Description.Equals((ViewData["standardSelected"] as string), StringComparison.InvariantCultureIgnoreCase))" value="@color.Description">@color.Description</option>
    }
</optgroup>
<optgroup label="Exclusive Colors">
    @foreach (var color in exclusiveColors.Result)
    {
        <option data-exclusive="true" data-price=@ViewData["exclusive"] selected="@(color.Description.Equals((ViewData["exclusiveSelected"] as string), StringComparison.InvariantCultureIgnoreCase))" value="@color.Description">@color.Description</option>
    }
</optgroup>

