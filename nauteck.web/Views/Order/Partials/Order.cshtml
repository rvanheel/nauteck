@using MediatR
@inject IMediator Mediator;

@model nauteck.data.Entities.Order.FloorOrder

@{
    var parts = await Mediator.Send(new nauteck.core.Features.Order.Queries.FloorOrderPartQuery(string.IsNullOrEmpty(Model.Id) ? Guid.Empty : Guid.Parse(Model.Id)));        
}

<div class="card w-100">
    <div class="card-header"><i class="bi bi-file-earmark-text"></i>&nbsp;Floor Order</div>
    <div class="card-body">
        <div class="row">
            <div class="col">
                @await Html.PartialAsync("Partials/FloorSelect", parts)
            </div>
            <div class="col-3">
                <label class="text-muted small" for="Parts.floorQuantity">Quantity m2</label>
                <input type="number" min="0.01" step="0.01" class="form-control form-control-sm" id="Parts.floorQuantity" name="@Html.NameFor(p=>parts.FloorQuantity)" value="@parts?.FloorQuantity" />
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-6">
                <label class="text-muted small" for="Parts.floorColorAbove">Color Above</label>
                <select class="form-select form-select-sm" name="@Html.NameFor(p=>parts!.FloorColorAbove)" id="Parts.floorColorAbove">
                    @await Html.PartialAsync("Partials/ColorSelectOptions", new ViewDataDictionary(ViewData) { {"standard", 0.0 },{ "exclusive", 20.0 }, { "standardSelected" , parts?.FloorColorAbove} })                  
                </select>
            </div>
            <div class="col-6">
                <label class="text-muted small" for="Parts.floorColorBeneath">Color Below</label>
                <select class="form-select form-select-sm" name="@Html.NameFor(p=>parts!.FloorColorBeneath)" id="Parts.floorColorBeneath">
                    @await Html.PartialAsync("Partials/ColorSelectOptions", new ViewDataDictionary(ViewData) { { "standard", "" }, { "exclusive", "" }, { "exclusiveSelected", parts?.FloorColorBeneath } })
                </select>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col">
                @await Html.PartialAsync("Partials/DesignSelect", parts)
            </div>
            <div class="col">
                @await Html.PartialAsync("Partials/MeasurementSelect", parts)
            </div>
        </div>
        <div class="row mt-2">
            <div class="col">
                <label class="text-muted small" for="constructionByNauteck">Construction by</label><br>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" checked="@(Model?.ConstructionBy.Equals("dealer", StringComparison.InvariantCultureIgnoreCase))" id="constructionByDealer" name="@Html.NameFor(m=>m.ConstructionBy)" type="radio" value="dealer">
                    <label class="form-check-label" for="constructionByDealer">Dealer</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" checked="@(Model?.ConstructionBy.Equals("nauteck", StringComparison.InvariantCultureIgnoreCase))" id="constructionByNauteck" name="@Html.NameFor(m=>m.ConstructionBy)" type="radio" value="nauteck">
                    <label class="form-check-label" for="constructionByNauteck">Nauteck</label>
                </div>
            </div>
            <div class="row mt-2">
                <div class="col">
                    @await Html.PartialAsync("Partials/ConstructionSelect", parts)
                </div>
                <div class="col-3">
                    <label class="text-muted small" for="Parts.callOutCostQuantity">CallOut Cost km's</label>
                    <input min="0" class="form-control form-control-sm" id="Parts.callOutCostQuantity" name="@Html.NameFor(p=>parts!.CallOutCostQuantity)" step="0.01" type="number" value="@parts?.CallOutCostQuantity">
                </div>
            </div>
        </div>
        @await Html.PartialAsync("Partials/Logo", Model)
    </div>
</div>
<input name="@Html.NameFor(p=>parts!.CallOutCostPrice)" value="0.80" type="hidden" />
<input name="@Html.NameFor(p=>parts!.ColorPrice)" value="20.00" type="hidden" />
@Html.HiddenFor(p => parts!.CallOutCostTotal)
@Html.HiddenFor(p => parts!.ConstructionPrice)
@Html.HiddenFor(p => parts!.ConstructionTotal)
@Html.HiddenFor(p => parts!.ColorTotal)
@Html.HiddenFor(p => parts!.DesignPrice)
@Html.HiddenFor(p => parts!.DesignTotal)
@Html.HiddenFor(p => parts!.FloorPrice)
@Html.HiddenFor(p => parts!.FloorTotal)
@Html.HiddenFor(p => parts!.LogoTotal)
@Html.HiddenFor(p => parts!.MeasurementPrice)
@Html.HiddenFor(p => parts!.MeasurementTotal)